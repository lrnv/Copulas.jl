import{_ as i,c as s,o as a,az as t}from"./chunks/framework.DIYm4_p-.js";const n="/Copulas.jl/dev/assets/kaxxvve.Bnhs42tO.png",l="/Copulas.jl/dev/assets/lqjfodw.CMw26-co.png",u=JSON.parse('{"title":"Fitting interface","description":"","frontmatter":{},"headers":[],"relativePath":"manual/fitting_interface.md","filePath":"manual/fitting_interface.md","lastUpdated":null}'),o={name:"manual/fitting_interface.md"};function d(p,e,h,r,c,k){return a(),s("div",null,[...e[0]||(e[0]=[t(`<div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\`\`\`@meta</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CurrentModule = Copulas</span></span></code></pre></div><h1 id="Fitting-interface" tabindex="-1">Fitting interface <a class="header-anchor" href="#Fitting-interface" aria-label="Permalink to &quot;Fitting interface {#Fitting-interface}&quot;">​</a></h1><p>This section summarizes <strong>how to fit</strong> copulas (and Sklar distributions) in <code>Copulas.jl</code>, without going into the details of each family.</p><hr><h2 id="Data-Conventions" tabindex="-1">Data Conventions <a class="header-anchor" href="#Data-Conventions" aria-label="Permalink to &quot;Data Conventions {#Data-Conventions}&quot;">​</a></h2><ul><li><p>We work with <strong>pseudo-observations</strong> <code>U ∈ (0,1)^{d×n}</code> (rows = dimension, columns = observations). You can use the <code>pseudo()</code> function to get such normalized ranks.</p></li><li><p>The <em>rank</em> routines (τ/ρ/β/γ) assume pseudo-observations.</p></li><li><p>The <code>StatsBase</code> functions for pairwise correlations use the <code>n×d</code> convention; when called internally, they are transposed (<code>U</code>) as appropriate.</p></li></ul><hr><h2 id="Main-Calls" tabindex="-1">Main Calls <a class="header-anchor" href="#Main-Calls" aria-label="Permalink to &quot;Main Calls {#Main-Calls}&quot;">​</a></h2><h3 id="Copula-Only-Object" tabindex="-1">Copula Only (Object) <a class="header-anchor" href="#Copula-Only-Object" aria-label="Permalink to &quot;Copula Only (Object) {#Copula-Only-Object}&quot;">​</a></h3><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Copulas, Random, StatsBase, Distributions</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Ctrue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GumbelCopula</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">U </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Ctrue, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Ĉ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> fit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(GumbelCopula, U; method</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:mle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Ĉ</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">GumbelCopula{2, Float64}(θ = 3.101831168554804,)</span></span></code></pre></div><p>Returns <strong>only</strong> the fitted copula <code>Ĉ::CT</code>. This is a high-level shortcut.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Plots</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Ĉ)</span></span></code></pre></div><p><img src="`+n+`" alt="" width="600px" height="400px"></p><h3 id="Full-Model-with-metadata" tabindex="-1">Full Model (with metadata) <a class="header-anchor" href="#Full-Model-with-metadata" aria-label="Permalink to &quot;Full Model (with metadata) {#Full-Model-with-metadata}&quot;">​</a></h3><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> fit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CopulaModel, GumbelCopula, U; method</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, summaries</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">M</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">Archimedean d=2 fitted via mle</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">Number of observations:      2000</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">Null Loglikelihood:        0.0000</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">Loglikelihood:          1496.9015</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">LR Test (vs indep. copula): 2993.80 ~ χ²(1)  =&gt;  p = 0</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">AIC: -2991.803       BIC: -2986.202</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">Converged: true   Iterations: 4   Elapsed: 0.007s</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">────────────────────────────────────────</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">Parameter          Estimate</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">────────────────────────────────────────</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">θ                   3.10183</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">────────────────────────────────────────</span></span></code></pre></div><p>Returns a <code>CopulaModel</code> with:</p><ul><li><p><code>result</code> (the fitted copula), <code>n</code>, <code>ll</code> (log-likelihood),</p></li><li><p><code>method</code>, <code>converged</code>, <code>iterations</code>, <code>elapsed_sec</code>,</p></li><li><p><code>vcov</code> (if available),</p></li><li><p><code>method_details</code> (a named tuple with method metadata and, if <code>summaries=true</code>, <strong>pairwise summaries</strong>: means, deviations, minima, and maxima of empirical τ/ρ/β/γ).</p></li></ul><hr><h2 id="Behavior-and-conventions-important" tabindex="-1">Behavior &amp; conventions (important) <a class="header-anchor" href="#Behavior-and-conventions-important" aria-label="Permalink to &quot;Behavior &amp;amp; conventions (important) {#Behavior-and-conventions-important}&quot;">​</a></h2><ul><li><p>fit operates on types, not on pre-constructed parameterized instances. Always pass a Copula or SklarDist <em>type</em> to <code>fit</code>, e.g. <code>fit(GumbelCopula, U)</code> or <code>fit(CopulaModel, SklarDist{ClaytonCopula,Tuple{Normal,LogNormal}}, X)</code>. If you already have a constructed instance <code>C0</code>, re-estimate its parameters by calling <code>fit(typeof(C0), U)</code>.</p></li><li><p>Default method selection: each family exposes the list of available fitting strategies via <code>_available_fitting_methods(CT)</code>. When <code>method = :default</code> the first element of that tuple is used. Example: <code>Copulas._available_fitting_methods(MyCopula)</code>.</p></li><li><p><code>CopulaModel</code> is the full result object returned by the fits performed via <code>Distributions.fit(::Type{CopulaModel}, ...)</code>. The light-weight shortcut <code>fit(MyCopula, U)</code> returns only a copula instance; use <code>fit(CopulaModel, ...)</code> to get diagnostics and metadata.</p></li></ul><h2 id="CopulaModel-Interface-summary" tabindex="-1"><code>CopulaModel</code> Interface (summary) <a class="header-anchor" href="#CopulaModel-Interface-summary" aria-label="Permalink to &quot;\`CopulaModel\` Interface (summary) {#CopulaModel-Interface-summary}&quot;">​</a></h2><p>The <code>CopulaModel{CT} &lt;: StatsBase.StatisticalModel</code> type stores the result and supports the standard <code>StatsBase</code> interface:</p><table tabindex="0"><thead><tr><th style="text-align:right;">Function</th><th style="text-align:right;">Description</th></tr></thead><tbody><tr><td style="text-align:right;"><code>nobs(M)</code></td><td style="text-align:right;">Number of observations</td></tr><tr><td style="text-align:right;"><code>loglikelihood(M)</code></td><td style="text-align:right;">Log-likelihood at the optimum</td></tr><tr><td style="text-align:right;"><code>deviance(M)</code></td><td style="text-align:right;">Deviance (= −2 loglikelihood)</td></tr><tr><td style="text-align:right;"><code>coef(M)</code></td><td style="text-align:right;">Estimated parameters</td></tr><tr><td style="text-align:right;"><code>coefnames(M)</code></td><td style="text-align:right;">Parameter names</td></tr><tr><td style="text-align:right;"><code>vcov(M)</code></td><td style="text-align:right;">Var–cov matrix</td></tr><tr><td style="text-align:right;"><code>stderror(M)</code></td><td style="text-align:right;">Standard errors</td></tr><tr><td style="text-align:right;"><code>confint(M)</code></td><td style="text-align:right;">Confidence intervals</td></tr><tr><td style="text-align:right;"><code>aic(M)</code></td><td style="text-align:right;">Akaike Information Criterion</td></tr><tr><td style="text-align:right;"><code>bic(M)</code></td><td style="text-align:right;">Bayesian Information Criterion</td></tr><tr><td style="text-align:right;"><code>aicc(M)</code></td><td style="text-align:right;">Corrected AIC (small-sample)</td></tr><tr><td style="text-align:right;"><code>hqc(M)</code></td><td style="text-align:right;">Hannan–Quinn criterion</td></tr></tbody></table><p>Quick access to the contained copula: <code>_copula_of(M)</code> (returns the copula even if <code>result</code> is a <code>SklarDist</code>).</p><h3 id="Pairwise-summaries-and-method_details" tabindex="-1">Pairwise summaries and <code>method_details</code> <a class="header-anchor" href="#Pairwise-summaries-and-method_details" aria-label="Permalink to &quot;Pairwise summaries and \`method_details\` {#Pairwise-summaries-and-method_details}&quot;">​</a></h3><p>When you request <code>summaries=true</code> (default) the returned <code>CopulaModel</code> contains extra pre-computed pairwise statistics inside <code>M.method_details</code>. Typical keys are:</p><ul><li><p><code>:tau_mean</code>, <code>:tau_sd</code>, <code>:tau_min</code>, <code>:tau_max</code></p></li><li><p><code>:rho_mean</code>, <code>:rho_sd</code>, <code>:rho_min</code>, <code>:rho_max</code></p></li><li><p><code>:beta_mean</code>, <code>:beta_sd</code>, <code>:beta_min</code>, <code>:beta_max</code></p></li><li><p><code>:gamma_mean</code>, <code>:gamma_sd</code>, <code>:gamma_min</code>, <code>:gamma_max</code></p></li></ul><p>Access example:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> fit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CopulaModel, GumbelCopula, U; summaries</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">M</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">method_details</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tau_mean  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># average pairwise Kendall&#39;s tau</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">0.6733016508254127</span></span></code></pre></div><p>If <code>summaries=false</code> these keys will be absent and <code>method_details</code> will be smaller.</p><h3 id="vcov-and-inference-notes" tabindex="-1"><code>vcov</code> and inference notes <a class="header-anchor" href="#vcov-and-inference-notes" aria-label="Permalink to &quot;\`vcov\` and inference notes {#vcov-and-inference-notes}&quot;">​</a></h3><ul><li>The <code>CopulaModel</code> field <code>vcov</code> (exposed as <code>StatsBase.vcov(M)</code>) contains the estimated covariance matrix of the fitted copula parameters when available. Many families supply <code>:vcov</code> via the <code>meta</code> NamedTuple returned by <code>_fit</code> (for example <code>meta.vcov</code>). If <code>vcov === nothing</code> the package cannot compute <code>stderror</code> or <code>confint</code> and those helpers will throw.</li></ul><p>TODO: add an example here.</p><p>Consider adding a small bootstrap wrapper for robust CIs when the Hessian is unreliable.</p><h2 id="Joint-margin-fitting-copula-Sklar" tabindex="-1">Joint margin fitting + copula (Sklar) <a class="header-anchor" href="#Joint-margin-fitting-copula-Sklar" aria-label="Permalink to &quot;Joint margin fitting + copula (Sklar) {#Joint-margin-fitting-copula-Sklar}&quot;">​</a></h2><ul><li><p><code>:ifm</code>: fits parametric margins and projects to pseudo-data with their CDFs.</p></li><li><p><code>:ecdf</code>: uses pseudo-empirical observations (ranks).</p></li></ul><p><strong>Notes:</strong></p><ul><li><p><code>sklar_method=:ifm</code> fits parametric margins first and converts observations to pseudo-scale via the fitted marginal CDFs. <code>sklar_method=:ecdf</code> uses empirical pseudo-observations (ranks). Choose <code>:ifm</code> when margins are believed parametric and you want a model-based projection; choose <code>:ecdf</code> to avoid margin misspecification.</p></li><li><p><code>margins_kwargs</code> is currently a single <code>NamedTuple</code> applied to every marginal fit. If you need different options per margin, fit margins manually (call <code>Distributions.fit</code> for each marginal type) and then call the copula fit on the pseudo-data yourself.</p></li><li><p>The model&#39;s <code>null_ll</code> field (used in LR tests) is computed as the sum of the marginal logpdfs under the fitted margins; LR tests compare the fitted copula vs independence while keeping the same margins.</p></li></ul><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SklarDist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClaytonCopula</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LogNormal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(S, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Ŝ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> fit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CopulaModel, SklarDist{ClaytonCopula,Tuple{Normal,LogNormal}}, X;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	sklar_method</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:ifm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># or :ecdf</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	copula_method</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># see next section.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	margins_kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), copula_kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># options will be passed down to fitting functions.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Ŝ</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">SklarDist{Copula=Archimedean d=2, Margins=(Normal, LogNormal)} fitted via mle</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">Number of observations:      1000</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">Null Loglikelihood:    -2191.8747</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">Loglikelihood:         -1125.4428</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">LR Test (vs indep. copula): 2132.86 ~ χ²(1)  =&gt;  p = 0</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">AIC: 2260.886       BIC: 2285.424</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">Converged: true   Iterations: 3   Elapsed: NA</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">──────────────────────────────────────────────────────────</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">[ Copula ]</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">──────────────────────────────────────────────────────────</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">Family           Param       Estimate    Std.Err       95% CI</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">Archimedean d=2  θ               5.74          —            —</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">Kendall          τ(θ)           0.742          —            —</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">──────────────────────────────────────────────────────────</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">[ Marginals ]</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">──────────────────────────────────────────────────────────</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">Margin Dist         Param     Estimate    Std.Err       95% CI</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">#1     Normal       μ          -0.0604          —            —</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">       Normal       σ             1.03          —            —</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">#2     LogNormal    μ          -0.0201          —            —</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">       LogNormal    σ             0.52          —            —</span></span></code></pre></div><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Ŝ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">result)</span></span></code></pre></div><p><img src="`+l+'" alt="" width="600px" height="400px"></p><hr><h2 id="Available-fitting-methods" tabindex="-1">Available fitting methods <a class="header-anchor" href="#Available-fitting-methods" aria-label="Permalink to &quot;Available fitting methods {#Available-fitting-methods}&quot;">​</a></h2><p>The names and availiability of fitting methods depends on the model. You can check what is available with the following internal call :</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Copulas</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_available_fitting_methods</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ClaytonCopula)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">(:mle, :itau, :irho, :ibeta)</span></span></code></pre></div><p>The first method in the list is the one used by default.</p><h3 id="Short-description" tabindex="-1">Short description <a class="header-anchor" href="#Short-description" aria-label="Permalink to &quot;Short description {#Short-description}&quot;">​</a></h3><ul><li><p><code>:mle</code> — <strong>Maximum likelihood</strong> over <code>U</code>. Recommended when there is a stable density and good reparameterization.</p></li><li><p><code>:itau</code> — <strong>Kendall&#39;s inverse</strong>: matches the theoretical <code>τ(C)</code> with the empirical <code>τ(U)</code>. Ideal for <strong>single-parameter families</strong> or when a reliable monotone inverse exists.</p></li><li><p><code>:irho</code> — <strong>Spearman&#39;s inverse</strong>: analogous to <code>ρ</code>; can operate with scalar or matrix objectives (e.g., multivariate Gaussians).</p></li><li><p><code>:ibeta</code> — <strong>Blomqvist&#39;s inverse</strong>: scalar; <strong>only</strong> works if the family has <strong>≤ 1 free parameter</strong>.</p></li></ul><blockquote><p><strong>Note:</strong> Rank-based methods require that the number of free parameters not exceed the information of the coefficient(s) used; in the case of <code>:ibeta</code>, this is explicitly enforced.</p></blockquote><p>In <strong>extreme value</strong> copulas, the <code>:mle</code>/<code>:iupper</code> variants can rely on the Pickands function (A(t)) and its derivatives (<code>A</code>, <code>dA</code>, <code>d²A</code>) with Brent-type numerical inversion.</p><hr><h2 id="Implementing-fitting-for-a-new-family-contributor-checklist" tabindex="-1">Implementing fitting for a new family (contributor checklist) <a class="header-anchor" href="#Implementing-fitting-for-a-new-family-contributor-checklist" aria-label="Permalink to &quot;Implementing fitting for a new family (contributor checklist) {#Implementing-fitting-for-a-new-family-contributor-checklist}&quot;">​</a></h2><p>When you add a new copula family, implement the following so the generic <code>fit</code> flow works seamlessly:</p><ol><li><p><code>_example(CT, d)</code> — return a representative instance (used to obtain default params and initial values).</p></li><li><p><code>_unbound_params(CT, d, params)</code> — transform the family <code>NamedTuple</code> parameters to an unconstrained <code>Vector{Float64}</code> used by optimizers.</p></li><li><p><code>_rebound_params(CT, d, α)</code> — invert <code>_unbound_params</code>, returning a <code>NamedTuple</code> suitable for <code>CT(d, ...)</code> construction.</p></li><li><p><code>_available_fitting_methods(::Type{&lt;:YourCopula})</code> — declare supported methods (examples: <code>:mle, :itau, :irho, :ibeta, ...</code>).</p></li><li><p><code>_fit(::Type{&lt;:YourCopula}, U, ::Val{:mle})</code> (and other <code>Val{}</code> methods) — implement the method and return <code>(fitted_copula, meta::NamedTuple)</code>; include keys such as <code>:θ̂</code>, <code>:optimizer</code>, <code>:converged</code>, <code>:iterations</code> and optionally <code>:vcov</code>.</p></li></ol><p>Place this checklist and a minimal <code>_fit</code> skeleton in <code>docs/src/manual/developer_fitting.md</code> where contributors can copy/paste and adapt. ````</p>',60)])])}const m=i(o,[["render",d]]);export{u as __pageData,m as default};
